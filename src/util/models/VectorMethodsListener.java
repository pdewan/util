package util.models;import java.util.Collection;public interface VectorMethodsListener<ElementType> {	public void elementAdded(Object source, ElementType element, int newSize);	public void elementsAdded(Object source,			Collection<? extends ElementType> element, int newSize);	public void elementInserted(Object source, ElementType element, int pos,			int newSize);	public void elementChanged(Object source, ElementType element, int pos);		public void userObjectChanged(Object source, Object newVal);		public void tempChanged(Object source, Object newVal);	public void elementRemoved(Object source, int pos, int newSize);	public void elementRemoved(Object source, ElementType element, int newSize, int pos);	public void elementsCleared(Object source);	void elementSwapped(Object newParam, int index1, int index2);	void elementSwapped(Object source, int index1, Object other, int index2);	void elementMoved(Object source, int fromIndex, int toIndex);	void elementMoved(Object source, int fromIndex, int fromNewSize, Object to,			int toIndex);	void elementCopied(Object source, int fromIndex, int toIndex, int newSize);	void elementCopied(Object source, int fromIndex, int fromNewSize,			Object to, int toIndex);		void elementCopiedAndInserted(Object source, int fromIndex, int toIndex, int newSize);	void elementCopiedAndInserted(Object source, int fromIndex, int fromNewSize,			Object to, int toIndex);	void elementReplaced(Object source, int fromIndex, int toIndex, int newSize);	void elementReplaced(Object source, int fromIndex, int newFromSize,			Object to, int toIndex);		void elementCopiedToUserObject(Object source, int fromIndex);		void elementCopiedFromUserObject(Object source, int fromIndex);	void elementRead(Object source, ElementType element, Integer pos);		void elementCopiedToTemp(Object source, int fromIndex);		void elementCopiedFromTemp(Object source, int fromIndex);	void userObjectCopiedToTemp(Object source, Object copiedValue);	void tempCopiedToUserObject(Object source, Object copiedValue);	void userObjectRead(Object source, Object readValue );	void tempRead(Object source, Object readValue);		void pointerChanged(Object source, Integer pointerValue);	void pointer2Changed(Object source, Integer pointerValue);	void userOperationOccured(Object source, Integer aTargetIndex, Object anOperation);}