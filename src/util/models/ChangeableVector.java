package util.models;import java.util.Collection;import java.util.Enumeration;//import bus.uigen.IndexedElementChecker;import java.util.List;public interface ChangeableVector<ElementType> {	public void addElement(ElementType c);	public boolean addAll(Collection<? extends ElementType> elements);	public void insertElementAt(ElementType element, int pos);	public boolean removeElement(ElementType c);	public void removeElementAt(int pos);	public void setElementAt(ElementType element, int pos);	public int size();	public void removeAllElements();	public ElementType elementAt(int i);	public IndexedElementChecker<ElementType> getIndexedElementChecker();	public void setIndexedElementChecker(			IndexedElementChecker<ElementType> theChecker);	// public int indexOf(Object o);	void open(ElementType element);	boolean preElementAt(int index);	Object getUserObject();	void setUserObject(Object newValue);		Object getTemp();	void setTemp(Object newValue);	ListenableVector getParent();	public void setParent(ListenableVector theParent);	// void setParent(AListenableVector theParent);	void setIsEditable(int index, boolean status);	boolean isEditable(int index);	boolean isColumnEditable(int index);	boolean preRemoveElement(ElementType element);	boolean preRemoveElementAt(int index);	boolean preAddElement(ElementType element);	boolean preSetElementAt(ElementType element, int pos);	boolean preInsertElementAt(ElementType element, int pos);	void initSerializedObject();	void swap(int index1, int index2);	void swap(int index1, List<ElementType> other, int index2);	void move(int fromIndex, int toIndex);	void move(int fromIndex, List<ElementType> to, int toIndex);	void copy(int fromIndex, int toIndex);	void copy(int fromIndex, List<ElementType> to, int toIndex);		void copyAndInsert(int fromIndex, int toIndex);	void copyAndInsert(int fromIndex, List<ElementType> to, int toIndex);	void replace(int fromIndex, int toIndex);	void replace(int fromIndex, List<ElementType> to, int toIndex);	void copyToUserObject(int index);	void copyFromUserObject(int index);		void copyToTemp(int index);	void copyFromTemp(int index);		void copyTempToUserObject(Object aSource);	void copyUserObjectToTemp(Object aSource);	void setPointer(Integer newVal);	Integer getPointer();	void setPointer2(Integer newVal);	Integer getPointer2();}